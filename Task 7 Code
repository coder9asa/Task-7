{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "67d1adfa",
   "metadata": {},
   "outputs": [],
   "source": [
    "import sqlite3\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "from matplotlib.backends.backend_pdf import PdfPages\n",
    "\n",
    "# Connect to the database\n",
    "conn = sqlite3.connect('sales_data.db')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ac885c0f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Run SQL queries\n",
    "total_summary_query = '''\n",
    "    SELECT SUM(quantity) as total_quantity, SUM(quantity * price) as total_revenue\n",
    "    FROM sales\n",
    "'''\n",
    "product_summary_query = '''\n",
    "    SELECT product, SUM(quantity * price) as total_sales\n",
    "    FROM sales\n",
    "    GROUP BY product\n",
    "    ORDER BY total_sales DESC\n",
    "'''\n",
    "date_summary_query = '''\n",
    "    SELECT date, SUM(quantity * price) as daily_revenue\n",
    "    FROM sales\n",
    "    GROUP BY date\n",
    "    ORDER BY date\n",
    "'''\n",
    "\n",
    "# Fetch data\n",
    "total_summary = pd.read_sql_query(total_summary_query, conn)\n",
    "product_summary = pd.read_sql_query(product_summary_query, conn)\n",
    "date_summary = pd.read_sql_query(date_summary_query, conn)\n",
    "\n",
    "conn.close()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e1bb5a46",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create PDF export\n",
    "pdf_path = 'sales_summary_report.pdf'\n",
    "with PdfPages(pdf_path) as pdf:\n",
    "    # Print summary\n",
    "    print(\"=== Basic Sales Summary ===\")\n",
    "    print(f\"Total Quantity Sold: {total_summary['total_quantity'][0]}\")\n",
    "    print(f\"Total Revenue: ₹{total_summary['total_revenue'][0]:.2f}\")\n",
    "\n",
    "    # Bar Chart - Revenue by Product\n",
    "    plt.figure(figsize=(10, 5))\n",
    "    plt.bar(product_summary['product'], product_summary['total_sales'], color='skyblue')\n",
    "    plt.title('Total Revenue by Product')\n",
    "    plt.xlabel('Product')\n",
    "    plt.ylabel('Revenue (₹)')\n",
    "    plt.xticks(rotation=45)\n",
    "    plt.tight_layout()\n",
    "    pdf.savefig()\n",
    "    plt.show()\n",
    "\n",
    "    # Pie Chart - Revenue Distribution\n",
    "    plt.figure(figsize=(7, 7))\n",
    "    plt.pie(product_summary['total_sales'], labels=product_summary['product'], autopct='%1.1f%%', startangle=140)\n",
    "    plt.title('Revenue Share by Product')\n",
    "    plt.tight_layout()\n",
    "    pdf.savefig()\n",
    "    plt.show()\n",
    "\n",
    "    # Line Chart - Revenue Trend by Date\n",
    "    plt.figure(figsize=(10, 5))\n",
    "    plt.plot(date_summary['date'], date_summary['daily_revenue'], marker='o', linestyle='-')\n",
    "    plt.title('Revenue Trend Over Time')\n",
    "    plt.xlabel('Date')\n",
    "    plt.ylabel('Revenue (₹)')\n",
    "    plt.xticks(rotation=45)\n",
    "    plt.tight_layout()\n",
    "    pdf.savefig()\n",
    "    plt.show()\n"
   ]
  }
 ],
 "metadata": {},
 "nbformat": 4,
 "nbformat_minor": 5
}
